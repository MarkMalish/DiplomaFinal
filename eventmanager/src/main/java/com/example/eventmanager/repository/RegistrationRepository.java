package com.example.eventmanager.repository;

import com.example.eventmanager.model.Event;
import com.example.eventmanager.model.Registration;
import com.example.eventmanager.model.User;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.util.List;
import java.util.Optional;

public interface RegistrationRepository extends JpaRepository<Registration,Long> {
    List<Registration> findByEventId(Long eventId);
    List<Registration> findByUser(User user); // üîç –ù–∞–π—Ç–∏ –≤—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Optional<Registration> findByUserAndEvent(User user, Event event); // üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

    List<Registration> findByEvent(Event event); // üîç –ù–∞–π—Ç–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–æ–±—ã—Ç–∏–∏

    @Query("SELECT COUNT(r) FROM Registration r WHERE r.event.id = :eventId")
    int countByEventId(@Param("eventId") Long eventId);

    @Query("SELECT COUNT(r) FROM Registration r WHERE r.user.id = :userId")
    int countByUserId(@Param("userId") Long userId);

    long countByEvent(Event event);
    boolean existsByUserAndEvent(User user, Event event);



}
